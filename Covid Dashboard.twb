<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.1qtuqfv06is8l218j5jm906u3i6l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0ikhg711s3adsv1h1xhb30gqpov9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Francisco/Documents/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ikhg711s3adsv1h1xhb30gqpov9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ikhg711s3adsv1h1xhb30gqpov9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C3DBEF12E8B84CD4941A62899923FBA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C3DBEF12E8B84CD4941A62899923FBA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C3DBEF12E8B84CD4941A62899923FBA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C3DBEF12E8B84CD4941A62899923FBA0]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C3DBEF12E8B84CD4941A62899923FBA0'>
            <properties context=''>
              <relation connection='excel-direct.0ikhg711s3adsv1h1xhb30gqpov9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0d3sbsc12x1nwm15gr97v06p0rqz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1ojefxt0k49t0m16ph0lx16inolp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Francisco/Documents/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ojefxt0k49t0m16ph0lx16inolp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ojefxt0k49t0m16ph0lx16inolp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9280EB804D640B59985F3468C8DEFC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A9280EB804D640B59985F3468C8DEFC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A9280EB804D640B59985F3468C8DEFC5]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#e56249'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f6834b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f9aa51'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A9280EB804D640B59985F3468C8DEFC5'>
            <properties context=''>
              <relation connection='excel-direct.1ojefxt0k49t0m16ph0lx16inolp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1b6ez2l1fi8utk14iq4tc1td8a0h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1wbucxs0xphevy1ak8vj50mfvecm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Francisco/Documents/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wbucxs0xphevy1ak8vj50mfvecm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1wbucxs0xphevy1ak8vj50mfvecm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D245:no:A1:D245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FF40E4F8E92349F98F4D6CC08C103DD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FF40E4F8E92349F98F4D6CC08C103DD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FF40E4F8E92349F98F4D6CC08C103DD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FF40E4F8E92349F98F4D6CC08C103DD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FF40E4F8E92349F98F4D6CC08C103DD7]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FF40E4F8E92349F98F4D6CC08C103DD7'>
            <properties context=''>
              <relation connection='excel-direct.1wbucxs0xphevy1ak8vj50mfvecm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0z6tuig14n4ib21es6gll1j06psu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0umymfo10xojyc194qiqb170fvz6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Francisco/Documents/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0umymfo10xojyc194qiqb170fvz6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0umymfo10xojyc194qiqb170fvz6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39A75CF1331E47F19787E8D0891A3790]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39A75CF1331E47F19787E8D0891A3790]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39A75CF1331E47F19787E8D0891A3790]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39A75CF1331E47F19787E8D0891A3790]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39A75CF1331E47F19787E8D0891A3790]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_39A75CF1331E47F19787E8D0891A3790]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#cb3c43'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f8b053'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_39A75CF1331E47F19787E8D0891A3790'>
            <properties context=''>
              <relation connection='excel-direct.0umymfo10xojyc194qiqb170fvz6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_BF3704D4BC604A7195DB8C77312F7A10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.1qtuqfv06is8l218j5jm906u3i6l' />
          </datasources>
          <datasource-dependencies datasource='federated.1qtuqfv06is8l218j5jm906u3i6l'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='73' />
            <format attr='width' field='[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]' value='256' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='text-format' field='[federated.1qtuqfv06is8l218j5jm906u3i6l].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]' value='52' />
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1qtuqfv06is8l218j5jm906u3i6l].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B4BFBD14-CA63-43C1-A7DD-D0A6BF430CB9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Count per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0d3sbsc12x1nwm15gr97v06p0rqz' />
          </datasources>
          <datasource-dependencies datasource='federated.0d3sbsc12x1nwm15gr97v06p0rqz'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]' direction='DESC' using='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[sum:TotalDeathCount:qk]' />
          <slices>
            <column>[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[sum:TotalDeathCount:qk]' field-type='quantitative' minor-origin='0' minor-spacing='50000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{E111DF1D-8B9D-46C4-9C50-456EF521934D}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Infection by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1b6ez2l1fi8utk14iq4tc1td8a0h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b6ez2l1fi8utk14iq4tc1td8a0h'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[Longitude (generated)]' field-type='quantitative' max='24277649.648505595' min='-15797367.037072908' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[Latitude (generated)]' field-type='quantitative' max='18953192.859068066' min='-11514205.321004698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run bold='true' fontsize='10'>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[none:Location:nk]' />
              <geometry column='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[Latitude (generated)]</rows>
        <cols>[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4C611988-9829-4B56-90C4-6A121D024928}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent of Population Infected of G7 Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0z6tuig14n4ib21es6gll1j06psu' />
          </datasources>
          <datasource-dependencies datasource='federated.0z6tuig14n4ib21es6gll1j06psu'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]' direction='DESC' using='[federated.0z6tuig14n4ib21es6gll1j06psu].[avg:PercentPopulationInfected:qk]' />
          <slices>
            <column>[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]' />
              <text column='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]' />
              <text column='[federated.0z6tuig14n4ib21es6gll1j06psu].[avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z6tuig14n4ib21es6gll1j06psu].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0z6tuig14n4ib21es6gll1j06psu].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{3F8DC3FD-21B0-4D69-A395-4DF9D9E73E8A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98700' id='19' param='horz' type-v2='layout-flow' w='99160' x='420' y='650'>
            <zone h='98700' id='11' param='horz' type-v2='layout-flow' w='99160' x='420' y='650'>
              <zone h='98700' id='8' param='horz' type-v2='layout-flow' w='99160' x='420' y='650'>
                <zone h='98700' id='6' type-v2='layout-basic' w='99160' x='420' y='650'>
                  <zone h='41342' id='13' name='Sheet 2' w='45350' x='420' y='19187'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='38821' id='15' name='Sheet 4' w='89971' x='420' y='60529'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='38821' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]' type-v2='color' w='9189' x='90391' y='60529'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='59879' id='17' name='Sheet 3' w='44623' x='45770' y='650'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='59879' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9187' x='90393' y='650'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='18537' id='21' name='Sheet 1' w='45350' x='420' y='650'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14309' id='14' name='Sheet 2' pane-specification-id='0' param='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]' type-v2='color' w='8145' x='35102' y='21220' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98700' id='22' param='vert' type-v2='layout-flow' w='99160' x='420' y='650'>
                <zone fixed-size='140' h='18537' id='21' is-fixed='true' name='Sheet 1' w='45350' x='420' y='650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59879' id='17' is-fixed='true' name='Sheet 3' w='44623' x='45770' y='650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='59879' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9187' x='90393' y='650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41342' id='13' is-fixed='true' name='Sheet 2' w='45350' x='420' y='19187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14309' id='14' name='Sheet 2' pane-specification-id='0' param='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]' type-v2='color' w='8145' x='35102' y='21220'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38821' id='15' is-fixed='true' name='Sheet 4' w='89971' x='420' y='60529'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38821' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]' type-v2='color' w='9189' x='90391' y='60529'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D52B24B7-EE1E-429B-9923-40C3DF77FD73}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qtuqfv06is8l218j5jm906u3i6l].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DF88C11-A65A-4FCA-A460-4C4DBB30E151}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C7C1A9F-729D-46EC-BF14-F683F6FBA3BC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b6ez2l1fi8utk14iq4tc1td8a0h].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7E3C7837-FEAC-4ECF-BB70-5F653EC75F67}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]</field>
            <field>[federated.0z6tuig14n4ib21es6gll1j06psu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8571FCBF-4659-4C85-9FAF-696CBE4271B2}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0d3sbsc12x1nwm15gr97v06p0rqz].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0z6tuig14n4ib21es6gll1j06psu].[none:Location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CDA5DE5E-101C-4229-9FBE-ED24F884AE8C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='129' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      leCQSJUDOwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
